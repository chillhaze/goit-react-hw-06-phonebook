{"version":3,"sources":["components/Filter/Filter.module.css","components/ContactList/ContactList.module.css","components/ContactForm/ContactForm.jsx","components/Filter/Filter.jsx","components/ContactList/ContactItem.jsx","components/ContactList/ContactList.jsx","components/TestingRedux/TestingRedux.styled.js","components/TestingRedux/TestingRedux.jsx","components/App.jsx","reportWebVitals.js","index.js","components/ContactForm/ContactForm.module.css","components/App.module.css"],"names":["module","exports","ContactForm","contacts","onSubmit","useState","name","setName","number","setNumber","nameInputId","uuidv4","numberInputId","handleFormChange","e","currentTarget","value","formReset","className","css","container","form","preventDefault","label","htmlFor","type","placeholder","pattern","title","required","onChange","input","id","btn","Filter","ContactItem","onDeleteBtnPush","listItem","contactIcon","btnDelete","onClick","ContactList","contactsList","map","Title","styled","header","TestingRedux","App","JSON","parse","window","localStorage","getItem","setContact","filtered","setFiltered","useEffect","setItem","stringify","filteredContacts","normalizedFilter","toLowerCase","filter","item","includes","getFilteredContacts","icon","newContact","find","alert","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3e13270a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Filter_container__1sVsQ\",\"input\":\"Filter_input__2FEtM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"ContactList_container__12NfP\",\"contactsList\":\"ContactList_contactsList__iXufD\",\"listItem\":\"ContactList_listItem__1esXg\",\"contactIcon\":\"ContactList_contactIcon__2jB40\",\"number\":\"ContactList_number__1Itnv\",\"btnDelete\":\"ContactList_btnDelete__19LDm\"};","import PropTypes from 'prop-types';\nimport { useState } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\n\nimport css from './ContactForm.module.css';\n\nexport const ContactForm = ({ contacts, onSubmit }) => {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const nameInputId = uuidv4();\n  const numberInputId = uuidv4();\n\n  const handleFormChange = e => {\n    const { name, value } = e.currentTarget;\n\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n      default:\n        return;\n    }\n  };\n\n  const handleOnSubmit = e => {\n    e.preventDefault();\n\n    contacts = { name: name, number: number };\n\n    onSubmit(contacts);\n    formReset();\n  };\n\n  const formReset = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <div className={css.container}>\n      <form className={css.form} onSubmit={handleOnSubmit}>\n        <label className={css.label} htmlFor={nameInputId}>\n          Name\n          <input\n            type=\"text\"\n            placeholder=\"Mark Zuckerberg\"\n            name=\"name\"\n            value={name}\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n            required\n            onChange={handleFormChange}\n            className={css.input}\n            id={nameInputId}\n          />\n        </label>\n\n        <label className={css.label} htmlFor={numberInputId}>\n          Number\n          <input\n            type=\"tel\"\n            placeholder=\"xxx-xx-xx\"\n            name=\"number\"\n            value={number}\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n            required\n            onChange={handleFormChange}\n            className={css.input}\n            id={numberInputId}\n          />\n        </label>\n\n        <button type=\"submit\" className={css.btn}>\n          Add contact\n        </button>\n      </form>\n    </div>\n  );\n};\n\nContactForm.propTypes = {\n  contacts: PropTypes.array,\n  onSubmit: PropTypes.func,\n};\n","import PropTypes from 'prop-types';\nimport css from './Filter.module.css';\n\nexport const Filter = ({ value, onChange }) => {\n  return (\n    <div className={css.container}>\n      <h2 className={css.title}>Search by name</h2>\n\n      <input\n        type=\"text\"\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n        value={value}\n        onChange={onChange}\n        className={css.input}\n      />\n    </div>\n  );\n};\n\nFilter.propTypes = {\n  onChange: PropTypes.func,\n  value: PropTypes.string,\n};\n","import PropTypes from 'prop-types';\nimport css from './ContactList.module.css';\nimport { FaTrashAlt } from 'react-icons/fa';\nimport { IoIosContact } from 'react-icons/io';\nimport { AiFillPhone } from 'react-icons/ai';\n\nexport const ContactItem = ({ id, name, number, onDeleteBtnPush }) => {\n  return (\n    <li className={css.listItem} key={id}>\n      <p className={css.name}>\n        <IoIosContact className={css.contactIcon} />\n        {name}:\n      </p>\n      <p className={css.number}>\n        <AiFillPhone className={css.contactIcon} />\n        {number}\n      </p>\n      <button\n        type=\"button\"\n        className={css.btnDelete}\n        onClick={() => onDeleteBtnPush(id)}\n      >\n        <FaTrashAlt />\n      </button>\n    </li>\n  );\n};\n\nContactItem.propTypes = {\n  id: PropTypes.string,\n  name: PropTypes.string,\n  number: PropTypes.string,\n  onDeleteBtnPush: PropTypes.func,\n};\n","import PropTypes from 'prop-types';\nimport css from './ContactList.module.css';\nimport { ContactItem } from './ContactItem';\n\nexport const ContactList = ({ contacts, onDeleteBtnPush }) => {\n  return (\n    <div className={css.container}>\n      <ul className={css.contactsList}>\n        {contacts.map(({ id, name, number }) => {\n          return (\n            <ContactItem\n              key={id}\n              id={id}\n              name={name}\n              number={number}\n              onDeleteBtnPush={onDeleteBtnPush}\n            />\n          );\n        })}\n      </ul>\n    </div>\n  );\n};\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(PropTypes.object),\n  onDeleteBtnPush: PropTypes.func,\n};\n","import styled from '@emotion/styled';\r\n\r\nexport const Title = styled.header`\r\n  margin-top: 20px;\r\n  padding: 10px;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  background-color: white;\r\n  border: 1px solid teal;\r\n  border-radius: 5px;\r\n  box-shadow: 1px 3px 10px -4px #050505;\r\n  align-items: center;\r\n`;\r\n","import { Title } from './TestingRedux.styled';\r\n\r\nexport const TestingRedux = () => {\r\n  return (\r\n    <div>\r\n      <Title>Hello! First steps with redux</Title>\r\n    </div>\r\n  );\r\n};\r\n","import { useState, useEffect } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport css from './App.module.css';\nimport { RiContactsBook2Fill } from 'react-icons/ri';\nimport { IoMdContacts } from 'react-icons/io';\n\nimport { ContactForm } from './ContactForm';\nimport { Filter } from './Filter';\nimport { ContactList } from './ContactList';\nimport { TestingRedux } from './TestingRedux';\n\nexport const App = () => {\n  const [contacts, setContact] = useState(() => {\n    // ленивая инициализация состояния - lazy initialization\n    return JSON.parse(window.localStorage.getItem('contacts' ?? ''));\n  });\n  const [filtered, setFiltered] = useState('');\n\n  useEffect(() => {\n    localStorage.setItem('contacts', JSON.stringify(contacts));\n  }, [contacts]);\n\n  const formSubmitHandler = newContact => {\n    newContact = {\n      id: uuidv4(),\n      name: newContact.name,\n      number: newContact.number,\n    };\n\n    if (contacts.find(item => item.name === newContact.name)) {\n      return alert(`${newContact.name + ' is already in contacts'}`);\n    } else {\n      setContact([...contacts, newContact]);\n      return;\n    }\n  };\n\n  const removeContactHandler = id => {\n    setContact(contacts.filter(item => item.id !== id));\n  };\n\n  const handleFilterChange = e => {\n    setFiltered(e.currentTarget.value);\n  };\n\n  const getFilteredContacts = () => {\n    const normalizedFilter = filtered.toLowerCase();\n\n    return contacts.filter(item =>\n      item.name.toLowerCase().includes(normalizedFilter),\n    );\n  };\n\n  const filteredContacts = getFilteredContacts();\n\n  return (\n    <div className={css.container}>\n      <h1 className={css.title}>\n        Phonebook <RiContactsBook2Fill className={css.icon} />\n      </h1>\n      <ContactForm contacts={contacts} onSubmit={formSubmitHandler} />\n\n      <Filter value={filtered} onChange={handleFilterChange} />\n      <h2 className={css.title}>\n        Contacts\n        <IoMdContacts className={css.icon} />\n      </h2>\n      <ContactList\n        contacts={filteredContacts}\n        onDeleteBtnPush={removeContactHandler}\n      />\n      <TestingRedux />\n    </div>\n  );\n};\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { App } from './components/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"ContactForm_container__3K_w2\",\"form\":\"ContactForm_form__3O6Ne\",\"label\":\"ContactForm_label__1b6v9\",\"input\":\"ContactForm_input__4IQKb\",\"btn\":\"ContactForm_btn__2HJcW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__1tMjs\",\"title\":\"App_title__2Bln7\",\"icon\":\"App_icon__1HWhi\"};"],"sourceRoot":""}